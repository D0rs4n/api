"""Initial

Revision ID: da2582d3d2eb
Revises: 
Create Date: 2021-10-16 15:54:56.336879

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'da2582d3d2eb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('botsetting',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_index(op.f('ix_botsetting_name'), 'botsetting', ['name'], unique=False)
    op.create_table('documentationlink',
    sa.Column('package', sa.String(length=50), nullable=False),
    sa.Column('base_url', sa.String(length=200), nullable=False),
    sa.Column('inventory_url', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('package')
    )
    op.create_index(op.f('ix_documentationlink_package'), 'documentationlink', ['package'], unique=False)
    op.create_table('filterlist',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('allowed', sa.Boolean(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('content', 'type', name='filter_list_uq')
    )
    op.create_table('offensivemessage',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=False),
    sa.Column('delete_date', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('offtopicchannelname',
    sa.Column('name', sa.String(length=96), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_index(op.f('ix_offtopicchannelname_name'), 'offtopicchannelname', ['name'], unique=False)
    op.create_table('repositorymetadata',
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=False),
    sa.Column('repo_name', sa.String(length=40), nullable=False),
    sa.Column('description', sa.String(length=400), nullable=False),
    sa.Column('forks', sa.Integer(), nullable=False),
    sa.Column('stargazers', sa.Integer(), nullable=False),
    sa.Column('language', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('repo_name')
    )
    op.create_index(op.f('ix_repositorymetadata_repo_name'), 'repositorymetadata', ['repo_name'], unique=False)
    op.create_table('role',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('colour', sa.Integer(), nullable=False),
    sa.Column('permissions', sa.BigInteger(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('discriminator', sa.SmallInteger(), nullable=False),
    sa.Column('in_guild', sa.Boolean(), nullable=False),
    sa.Column('roles', sa.ARRAY(sa.BigInteger()), nullable=False),
    sa.CheckConstraint('discriminator >= 0'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('infraction',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('inserted_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('type', sa.String(length=10), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('hidden', sa.Boolean(), nullable=False),
    sa.Column('actor_id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['user.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_infraction_actor_id'), 'infraction', ['actor_id'], unique=False)
    op.create_index(op.f('ix_infraction_user_id'), 'infraction', ['user_id'], unique=False)
    op.create_index('unique_active_infraction_per_type_per_user', 'infraction', ['user_id', 'type'], unique=True)
    op.create_table('message',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=False),
    sa.Column('content', sa.String(length=4000), nullable=False),
    sa.Column('embeds', sa.ARRAY(postgresql.JSONB(astext_type=sa.Text())), nullable=False),
    sa.Column('author_id', sa.BigInteger(), nullable=False),
    sa.Column('attachments', sa.ARRAY(sa.String(length=512)), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_message_author_id'), 'message', ['author_id'], unique=False)
    op.create_table('messagedeletioncontext',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('creation', sa.DateTime(timezone=True), nullable=False),
    sa.Column('actor_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['user.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messagedeletioncontext_actor_id'), 'messagedeletioncontext', ['actor_id'], unique=False)
    op.create_table('nomination',
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('inserted_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('end_reason', sa.Text(), nullable=False),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reviewed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nomination_user_id'), 'nomination', ['user_id'], unique=False)
    op.create_table('reminder',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('channel_id', sa.BigInteger(), nullable=False),
    sa.Column('content', sa.String(length=1500), nullable=False),
    sa.Column('expiration', sa.DateTime(timezone=True), nullable=False),
    sa.Column('author_id', sa.BigInteger(), nullable=False),
    sa.Column('jump_url', sa.String(length=88), nullable=False),
    sa.Column('mentions', sa.ARRAY(sa.BigInteger()), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reminder_author_id'), 'reminder', ['author_id'], unique=False)
    op.create_table('deletedmessage',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('deletion_context_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['deletion_context_id'], ['messagedeletioncontext.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_deletedmessage_deletion_context_id'), 'deletedmessage', ['deletion_context_id'], unique=False)
    op.create_table('nominationentry',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('inserted_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('actor_id', sa.BigInteger(), nullable=False),
    sa.Column('nomination_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['user.id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['nomination_id'], ['nomination.id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nominationentry_actor_id'), 'nominationentry', ['actor_id'], unique=False)
    op.create_index(op.f('ix_nominationentry_nomination_id'), 'nominationentry', ['nomination_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_nominationentry_nomination_id'), table_name='nominationentry')
    op.drop_index(op.f('ix_nominationentry_actor_id'), table_name='nominationentry')
    op.drop_table('nominationentry')
    op.drop_index(op.f('ix_deletedmessage_deletion_context_id'), table_name='deletedmessage')
    op.drop_table('deletedmessage')
    op.drop_index(op.f('ix_reminder_author_id'), table_name='reminder')
    op.drop_table('reminder')
    op.drop_index(op.f('ix_nomination_user_id'), table_name='nomination')
    op.drop_table('nomination')
    op.drop_index(op.f('ix_messagedeletioncontext_actor_id'), table_name='messagedeletioncontext')
    op.drop_table('messagedeletioncontext')
    op.drop_index(op.f('ix_message_author_id'), table_name='message')
    op.drop_table('message')
    op.drop_index('unique_active_infraction_per_type_per_user', table_name='infraction')
    op.drop_index(op.f('ix_infraction_user_id'), table_name='infraction')
    op.drop_index(op.f('ix_infraction_actor_id'), table_name='infraction')
    op.drop_table('infraction')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_index(op.f('ix_repositorymetadata_repo_name'), table_name='repositorymetadata')
    op.drop_table('repositorymetadata')
    op.drop_index(op.f('ix_offtopicchannelname_name'), table_name='offtopicchannelname')
    op.drop_table('offtopicchannelname')
    op.drop_table('offensivemessage')
    op.drop_table('filterlist')
    op.drop_index(op.f('ix_documentationlink_package'), table_name='documentationlink')
    op.drop_table('documentationlink')
    op.drop_index(op.f('ix_botsetting_name'), table_name='botsetting')
    op.drop_table('botsetting')
    # ### end Alembic commands ###
